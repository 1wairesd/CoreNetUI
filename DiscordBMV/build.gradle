plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'xyz.jpenilla.run-velocity' version '2.3.1'
}

group = 'com.wairesd.discordbm.velocity'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation project(':DiscordBMB')
    implementation project(':common')
    implementation 'org.xerial:sqlite-jdbc:3.49.1.0'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'io.netty:netty-all:4.2.0.Final'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
}

tasks {
    runVelocity {
        velocityVersion("3.4.0-SNAPSHOT")
    }

    shadowJar {
        archiveClassifier.set('')
        relocate 'net.dv8tion.jda', 'com.wairesd.shaded.jda'
        from project(':common').sourceSets.main.output
        mergeServiceFiles()
    }

    build {
        dependsOn(tasks.shadowJar)
    }

    compileJava {
        dependsOn ':DiscordBMB:build'
    }
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('velocity-plugin.json') {
        expand props
    }
}

import org.gradle.api.file.DuplicatesStrategy

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}