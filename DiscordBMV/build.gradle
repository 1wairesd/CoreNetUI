plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'xyz.jpenilla.run-velocity' version '2.3.1'
    id 'maven-publish'
}

group = 'com.wairesd.discordbm.velocity'
version = '1.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.wairesd.discordbm'
            artifactId = 'DiscordBMV'
            version = '1.0'
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
}

dependencies {
    implementation project(':common:host-common')
    implementation project(':common')
    implementation project(':api')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

tasks.named('runVelocity') {
    velocityVersion("3.4.0-SNAPSHOT")
}

tasks.named('shadowJar') {
    archiveClassifier.set('')
    relocate 'net.dv8tion.jda', 'com.wairesd.shaded.jda'
    relocate 'okhttp3', 'com.wairesd.shaded.okhttp3'
    relocate 'gnu.trove', 'com.wairesd.shaded.gnu.trove'
    relocate 'org.apache.commons.collections4', 'com.wairesd.shaded.org.apache.commons.collections4'
    from(project(':common').sourceSets.main.output)
    mergeServiceFiles()
}

tasks.named('build') {
    dependsOn(tasks.named('shadowJar'))
}

tasks.named('compileJava') {
    dependsOn(':DiscordBMB:build')
}

tasks.named('processResources') {
    def props = [version: version]
    inputs.properties(props)
    filteringCharset = 'UTF-8'
    filesMatching('velocity-plugin.json') {
        expand(props)
    }
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
