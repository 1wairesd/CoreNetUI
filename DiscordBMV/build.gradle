plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'xyz.jpenilla.run-velocity' version '2.3.1'
}

group = 'com.wairesd.discordbm.velocity'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
    maven { url 'https://repo.alessiodp.com/releases/' }
}

dependencies {
    implementation project(":common:host-common")
    implementation project(":common")
    implementation project(":api")

    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    implementation 'net.byteflux:libby-velocity:1.3.1'
    compileOnly 'com.squareup.okhttp3:okhttp:4.12.0'
    compileOnly 'com.google.code.gson:gson:2.10.1'
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

tasks.named('runVelocity') {
    velocityVersion("3.4.0-SNAPSHOT")
}

tasks.named('shadowJar') {
    archiveClassifier.set('')
    from(project(':common').sourceSets.main.output)
    mergeServiceFiles()
}

tasks.named('build') {
    dependsOn(tasks.named('shadowJar'))
}

tasks.named('compileJava') {
    dependsOn(':DiscordBMB:build')
}

tasks.named('processResources') {
    def props = [version: version]
    filteringCharset = 'UTF-8'
    filesMatching('velocity-plugin.json') {
        expand(props)
    }
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
